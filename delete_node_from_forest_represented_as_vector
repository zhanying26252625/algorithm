/*
Given a forest which is represented by a vector : the value of each spot is the index of the parent in the vector.
the parent is guaranteed to be positioned before the child in the vector, if there is no parent, value is just -1.

implment a function to remove a node and all the children of that node. 
(an easier version is just remove just that node and relink its children to its parent)

void removeNodeWithChildren(vector<int>& forest, int node);

for example: we have 2 trees in the forest.

     0                    2
  1      3              4   5
9      6   7          8    




index :  0 1  2  3 4 5 6 7 8 9
parent: -1 0 -1  0 2 2 3 3 4 1

after remove node = 3, we should have following forest (represented in vector)

index :  0 1  2  3 4 5 6
parent: -1 0 -1  2 2 3 1


    0                     2
  1                     3   4
6                    5   

the optimal solution is O(N)
*/
